<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Notice">
	<sql id="noticeSearch">
		<if test="searchType != null and searchType == 'title'">
			and (botitle like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'writer'">
			and (bowriter like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'titlewriter'">
			and (botitle like '%'||#{searchWord}||'%' or bowriter like '%'||#{searchWord}||'%')
		</if>
	</sql>
	
	<insert id="insertNotice" parameterType="noticeVO" useGeneratedKeys="true">
		<selectKey keyProperty="boNo" order="BEFORE" resultType="int">
			select seq_notice.nextval from dual
		</selectKey>
		insert into notice(bono, botitle, bocontent, bowriter, bodate)
		values (#{boNo}, #{boTitle}, #{boContent}, #{boWriter}, sysdate)
	</insert>
	
	<select id="selectNoticeCount" parameterType="pagingVO" resultType="int">
		select count(bono)
		  from notice
		 where 1=1
		 <include refid="noticeSearch"></include> 
	</select>
	
	<select id="selectNoticeList" parameterType="pagingVO" resultType="noticeVO">
		select b.*
		  from(
				select 
					a.*, row_number() over (order by a.bono desc) rnum
				  from(
						select 
							bono, botitle, bocontent, bowriter, to_char(bodate, 'yy-mm-dd hh24:mi:ss') bodate, bohit
						  from notice
						 where 1=1
						 <include refid="noticeSearch"></include>
						 order by 1 desc
					 ) a
				) b
		<![CDATA[
		 	where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		 ]]>
	</select>
	
	<select id="selectNotice" parameterType="int" resultType="noticeVO">
		select 
			bono, botitle, bocontent, bowriter, bodate, bohit
		  from notice
		 where bono = #{boNo} 
	</select>
	
	<update id="incrementHit" parameterType="int">
		update notice set bohit = bohit + 1 where bono = #{boNo}
	</update>
	
	<update id="updateNotice" parameterType="noticeVO">
		update notice set
			botitle = #{boTitle},
			bocontent = #{boContent},
			bodate = sysdate
		 where bono = #{boNo}	
	</update>
	
	<delete id="deleteNotice" parameterType="int">
		delete from notice where bono = #{boNo}
	</delete>
	
	<select id="findNo" parameterType="int" resultType="int">
		select count(*) from notice where bono = #{boNo}
	</select>
</mapper>